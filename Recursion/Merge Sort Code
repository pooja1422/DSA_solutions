Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8

public class solution {

// 	public static void mergeSort(int[] input){
// 		// Write your code here
//         int start=0;
//         int end=input.length;
//         if(start<end){
//             int mid =(start+end)/2;
//             int s1=mid-start+1;
//             int s2=end-mid; 
//             int L[] = new int[s1];
//             int R[] = new int[s2];


//             for (int i = 0; i < s1; ++i)
//                 L[i] = input[start + i];
//             for (int j = 0; j < s2; ++j)
//                 R[j] = input[mid + 1 + j];
            
//         	mergeSort(L);
//             mergeSort(R);
 
//             merge(input,L,R);
//         }
        
        
// 	
//     public static int [] merge(int[] input,int[] L,int[]R){
//         int i=0,j=0,k=0;
//         while(i<L.length && j<R.length){
//             if(L[i]<R[j]){
//                 input[k]=L[i];
//                 i++;k++;
//             }
//             else{
//                 input[k]=R[j];
//                 j++;k++;
//             }
//         }
//         while(i<L.length){
//             input[k]=L[i];
//                 i++;k++;
//         }
//         while(j<R.length){
//             input[k]=R[j];
//                 j++;k++;
//         }
//         return input;
//     }
// }
    
    
    //Aapproach 2
  public static void mergeSort(int[] input){
		mergeSort(input, 0, input.length-1);
    }
    public static void mergeSort(int[] input, int si, int end){
		if(si >= end) {
			return;
		}
		int  mid= (si+ end) / 2;
		mergeSort(input, si, mid);
		mergeSort(input, mid+1 , end);
		merge(input, si, end);
	}
		
	public static void merge(int[] input, int si,  int end){
		int ans[]= new int [end- si + 1];
		int  mid= (si+ end)/2;
		int i= si;
		int j= mid+1;
		int k=0;
		while( i<=mid && j<= end) {
			if(input[i]< input[j]) {
				ans[k]= input[i];
				i++;
				k++;
			}
			else {
				ans[k]= input[j];
				j++;
				k++;
			}
		}
		while( i<= mid) {
			ans[k]= input[i];
			i++;
			k++;
		}
		while(j<=end) {
			ans[k]= input[j];
			j++;
			k++;
		}
		for( int index= 0; index<ans.length; index++) {
			input[si+ index]= ans[index];
		}
	}
	
	}

