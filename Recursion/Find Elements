##Find the Unique Element
public class Solution {

	public static int findUnique(int[] arr) {
		//Your code goes here
        int a=0;
        for(int i =0;i<arr.length;i++){
            a^=arr[i];
        }
        return a;
	}
}

##Duplicate in array

public class Solution {

	public static int findDuplicate(int[] arr) {
		//Your code goes here
        int sum=0;
        int n=arr.length;
        int nat=((n-2)*(n-1))/2;
        for(int i=0;i<n;i++){
            sum+=arr[i];
        }
        return sum-nat;
	}
}

##Array Intersection
Sample Input 1 :
2
6
2 6 8 5 4 3
4
2 3 4 7 
2
10 10
1
10
Sample Output 1 :
2 3 4
10

import java.util.*;
public class Solution {

	public static void intersection(int[] arr1, int[] arr2) {
	    //Your code goes here
        Arrays.sort(arr1);
        Arrays.sort(arr2);
        merge(arr1,arr2);

        }
     private static void merge(int arr1[] ,int arr2[]){
        int i=0,j=0;

        while(i<arr1.length && j<arr2.length){
            if(arr1[i] == arr2[j]){
                System.out.print(arr1[i]+" ");
                i++;
                j++;
            }else if(arr1[i] < arr2[j]){
                i++;
            }else{
                j++;
            }
        }

	}

}
