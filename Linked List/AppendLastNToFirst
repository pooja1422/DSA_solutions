You have been given a singly linked list of integers along with an integer 'N'. 
Write a function to append the last 'N' nodes towards the front of the singly linked list and returns the new head to the list.
Sample Input 1 :
2
1 2 3 4 5 -1
3
10 20 30 40 50 60 -1
5
Sample Output 1 :
3 4 5 1 2
20 30 40 50 60 10

/*

	Following is the Node class already written for the Linked List

	class LinkedListNode<T> {
    	T data;
    	LinkedListNode<T> next;
    
    	public LinkedListNode(T data) {
        	this.data = data;
    	}
	}

*/

public class Solution {

	public static LinkedListNode<Integer> appendLastNToFirst(LinkedListNode<Integer> head, int n) {
		//Your code goes here
        LinkedListNode<Integer> temp=head;
        if(head==null || n==0)
            return head;
        int i=0;
        while(temp!=null){
            temp=temp.next;
            i++;
        }
        int x=i-n;
        i=0;
        LinkedListNode<Integer> temp1=head;
        while(i<x-1){
            temp1=temp1.next;
            i++;
        }
        LinkedListNode<Integer> temp2=temp1.next;
        LinkedListNode<Integer> temp3=temp1.next;
        while(temp2.next!=null){
            temp2=temp2.next;
        }
        temp2.next=head;
        temp1.next=null;
        return temp3;

	}

}
